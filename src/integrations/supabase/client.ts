// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://LanOnasis.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "your-supabase-anon-key";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Determine correct redirect URL based on environment
export const getRedirectUrl = () => {
  if (typeof window === 'undefined') return 'https://dashboard.LanOnasis.com/';

  const isLocalhost = window.location.hostname === '127.0.0.1' || window.location.hostname === 'localhost';

  if (isLocalhost) {
    return `${window.location.origin}/`;
  }

  // Always redirect to dashboard.LanOnasis.com root for OAuth (auth component will handle dashboard redirect)
  return 'https://dashboard.LanOnasis.com/';
};

// OAuth callback URL for provider configurations
export const getOAuthCallbackUrl = () => {
  if (typeof window === 'undefined') return 'https://dashboard.LanOnasis.com/auth/callback';

  const isLocalhost = window.location.hostname === '127.0.0.1' || window.location.hostname === 'localhost';

  if (isLocalhost) {
    return `${window.location.origin}/auth/callback`;
  }

  // Always use dashboard.LanOnasis.com for OAuth callbacks
  return 'https://dashboard.LanOnasis.com/auth/callback';
};

// Create Supabase client with error handling
let supabaseClient;
try {
  supabaseClient = createClient<Database>(
    SUPABASE_URL,
    SUPABASE_PUBLISHABLE_KEY,
    {
      auth: {
        flowType: 'pkce',
        detectSessionInUrl: true,
        persistSession: true,
        autoRefreshToken: true,
      },
    }
  );
} catch (error) {
  console.error('Failed to initialize Supabase client:', error);
  // Create a dummy client that won't crash the app
  supabaseClient = createClient<Database>(
    'https://placeholder.supabase.co',
    'placeholder-key'
  );
}

export const supabase = supabaseClient;